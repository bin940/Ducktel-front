{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sub-home-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($options.category) + \" 페이지\", 1 /* TEXT */), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"location\"\n  }, \"지역 선택:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"location\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedLocation = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.goToLocationHome && $options.goToLocationHome(...args))\n  }, _cache[2] || (_cache[2] = [_createStaticVNode(\"<option value=\\\"\\\" disabled data-v-7186fc82>지역을 선택하세요</option><option value=\\\"seoul\\\" data-v-7186fc82>서울</option><option value=\\\"busan\\\" data-v-7186fc82>부산</option><option value=\\\"jeju\\\" data-v-7186fc82>제주</option><option value=\\\"incheon\\\" data-v-7186fc82>인천</option><option value=\\\"gangwon\\\" data-v-7186fc82>강원</option>\", 6)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedLocation]])]), $data.subHomeData && $data.subHomeData.categoryAccommodations ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString($options.category) + \" 숙소 목록\", 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subHomeData.categoryAccommodations, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.accommodationId\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(item.name), 1 /* TEXT */), _createTextVNode(\" - \" + _toDisplayString(item.location), 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"태그: \" + _toDisplayString(item.tag || \"없음\"), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"설명: \" + _toDisplayString(item.explanation || \"없음\"), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"서비스: \" + _toDisplayString(item.serviceInfo || \"없음\"), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), item.image && item.image.length ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"이미지: \" + _toDisplayString(item.image[0]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[8] || (_cache[8] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), item.discount ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"할인: \" + _toDisplayString(item.discount) + \"%\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[9] || (_cache[9] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), item.season ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"계절: \" + _toDisplayString(item.season), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"좋아요: \" + _toDisplayString(item.likeCount), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"데이터를 불러오는 중...\")), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"홈으로 돌아가기\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$options","category","for","id","_cache","$event","$data","selectedLocation","onChange","args","goToLocationHome","_createStaticVNode","subHomeData","categoryAccommodations","_hoisted_2","_Fragment","_renderList","item","accommodationId","name","_createTextVNode","location","tag","explanation","serviceInfo","image","length","_hoisted_3","_createCommentVNode","discount","_hoisted_4","season","_hoisted_5","likeCount","_hoisted_6","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\SubHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"sub-home-container\">\r\n    <h2>{{ category }} 페이지</h2>\r\n    <div>\r\n      <label for=\"location\">지역 선택:</label>\r\n      <select id=\"location\" v-model=\"selectedLocation\" @change=\"goToLocationHome\">\r\n        <option value=\"\" disabled>지역을 선택하세요</option>\r\n        <option value=\"seoul\">서울</option>\r\n        <option value=\"busan\">부산</option>\r\n        <option value=\"jeju\">제주</option>\r\n        <option value=\"incheon\">인천</option>\r\n        <option value=\"gangwon\">강원</option>\r\n      </select>\r\n    </div>\r\n    <div v-if=\"subHomeData && subHomeData.categoryAccommodations\">\r\n      <h3>{{ category }} 숙소 목록</h3>\r\n      <ul>\r\n        <li v-for=\"item in subHomeData.categoryAccommodations\" :key=\"item.accommodationId\">\r\n          <strong>{{ item.name }}</strong> - {{ item.location }}<br />\r\n          <span>태그: {{ item.tag || \"없음\" }}</span><br />\r\n          <span>설명: {{ item.explanation || \"없음\" }}</span><br />\r\n          <span>서비스: {{ item.serviceInfo || \"없음\" }}</span><br />\r\n          <span v-if=\"item.image && item.image.length\">이미지: {{ item.image[0] }}</span><br />\r\n          <span v-if=\"item.discount\">할인: {{ item.discount }}%</span><br />\r\n          <span v-if=\"item.season\">계절: {{ item.season }}</span><br />\r\n          <span>좋아요: {{ item.likeCount }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <p v-else>데이터를 불러오는 중...</p>\r\n    <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"SubHome\",\r\n  data() {\r\n    return {\r\n      subHomeData: null,\r\n      selectedLocation: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    category() {\r\n      return this.$route.params.category;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchSubHomeData();\r\n  },\r\n  methods: {\r\n    async fetchSubHomeData() {\r\n      try {\r\n        const response = await api.get(`/api/sub-home/${this.category}`);\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.subHomeData = result.data;\r\n          console.log(\"Sub-Home 데이터 조회 성공:\", this.subHomeData);\r\n        } else {\r\n          console.error(\"Sub-Home 데이터 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Sub-Home 데이터 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    goToLocationHome() {\r\n      if (this.selectedLocation) {\r\n        this.$router.push(`/sub-home/${this.category}/${this.selectedLocation}`);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sub-home-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\nselect {\r\n  padding: 5px;\r\n  margin-left: 10px;\r\n}\r\nul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}