{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"places-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"accommodation-info\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"rooms-list\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[22] || (_cache[22] = _createElementVNode(\"h2\", null, \"숙소 상세 정보\", -1 /* HOISTED */)), $data.placesData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" 숙소 정보 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString($data.placesData.accommodation.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"위치:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.location), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"태그:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.tag || \"없음\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"설명:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.explanation || \"없음\"), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"서비스:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.serviceInfo || \"없음\"), 1 /* TEXT */)]), $data.placesData.accommodation.image && $data.placesData.accommodation.image.length ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"이미지:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.placesData.accommodation.image[0],\n    alt: \"숙소 이미지\",\n    style: {\n      \"max-width\": \"300px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true), $data.placesData.accommodation.discount ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"할인:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.discount) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.placesData.accommodation.season ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"계절:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.season), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"좋아요:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.placesData.accommodation.likeCount), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"체크인:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.checkInDate), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"체크아웃:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.checkOutDate), 1 /* TEXT */)])]), _createCommentVNode(\" 방 목록 \"), $data.placesData.rooms && $data.placesData.rooms.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[19] || (_cache[19] = _createElementVNode(\"h3\", null, \"예약 가능한 방\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.placesData.rooms, room => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: room.roomId\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(room.name), 1 /* TEXT */), _cache[11] || (_cache[11] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"최대 인원: \" + _toDisplayString(room.maxCapacity), 1 /* TEXT */), _cache[12] || (_cache[12] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"최소 인원: \" + _toDisplayString(room.minCapacity), 1 /* TEXT */), _cache[13] || (_cache[13] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"가격: \" + _toDisplayString(room.price) + \"원\", 1 /* TEXT */), _cache[14] || (_cache[14] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"설명: \" + _toDisplayString(room.explanation || \"없음\"), 1 /* TEXT */), _cache[15] || (_cache[15] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"서비스: \" + _toDisplayString(room.serviceInfo || \"없음\"), 1 /* TEXT */), _cache[16] || (_cache[16] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"태그: \" + _toDisplayString(room.tag || \"없음\"), 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), room.images && room.images.length ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, [_cache[10] || (_cache[10] = _createTextVNode(\" 이미지: \")), _createElementVNode(\"img\", {\n      src: room.images[0],\n      alt: \"방 이미지\",\n      style: {\n        \"max-width\": \"200px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_10)])) : _createCommentVNode(\"v-if\", true), _cache[18] || (_cache[18] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"남은 방 수: \" + _toDisplayString(room.availableRooms), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"예약 가능한 방이 없습니다.\"))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"데이터를 불러오는 중...\")), _createVNode(_component_router_link, {\n    to: `/sub-home/${$data.placesData?.accommodation?.category || '호텔'}`\n  }, {\n    default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"카테고리로 돌아가기\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _cache[23] || (_cache[23] = _createTextVNode(\" | \")), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"홈으로 돌아가기\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","placesData","_hoisted_2","_createCommentVNode","_hoisted_3","_toDisplayString","accommodation","name","_createTextVNode","location","tag","explanation","serviceInfo","image","length","_hoisted_4","src","alt","style","_hoisted_5","discount","_hoisted_6","season","_hoisted_7","likeCount","$options","checkInDate","checkOutDate","rooms","_hoisted_8","_Fragment","_renderList","room","roomId","maxCapacity","minCapacity","price","images","_hoisted_9","_hoisted_10","availableRooms","_hoisted_11","_hoisted_12","_createVNode","_component_router_link","to","category","default","_withCtx","_cache","_"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\Places.vue"],"sourcesContent":["<template>\r\n  <div class=\"places-container\">\r\n    <h2>숙소 상세 정보</h2>\r\n    <div v-if=\"placesData\">\r\n      <!-- 숙소 정보 -->\r\n      <div class=\"accommodation-info\">\r\n        <h3>{{ placesData.accommodation.name }}</h3>\r\n        <p><strong>위치:</strong> {{ placesData.accommodation.location }}</p>\r\n        <p><strong>태그:</strong> {{ placesData.accommodation.tag || \"없음\" }}</p>\r\n        <p><strong>설명:</strong> {{ placesData.accommodation.explanation || \"없음\" }}</p>\r\n        <p><strong>서비스:</strong> {{ placesData.accommodation.serviceInfo || \"없음\" }}</p>\r\n        <p v-if=\"placesData.accommodation.image && placesData.accommodation.image.length\">\r\n          <strong>이미지:</strong>\r\n          <img :src=\"placesData.accommodation.image[0]\" alt=\"숙소 이미지\" style=\"max-width: 300px;\" />\r\n        </p>\r\n        <p v-if=\"placesData.accommodation.discount\"><strong>할인:</strong> {{ placesData.accommodation.discount }}%</p>\r\n        <p v-if=\"placesData.accommodation.season\"><strong>계절:</strong> {{ placesData.accommodation.season }}</p>\r\n        <p><strong>좋아요:</strong> {{ placesData.accommodation.likeCount }}</p>\r\n        <p><strong>체크인:</strong> {{ checkInDate }}</p>\r\n        <p><strong>체크아웃:</strong> {{ checkOutDate }}</p>\r\n      </div>\r\n\r\n      <!-- 방 목록 -->\r\n      <div class=\"rooms-list\" v-if=\"placesData.rooms && placesData.rooms.length\">\r\n        <h3>예약 가능한 방</h3>\r\n        <ul>\r\n          <li v-for=\"room in placesData.rooms\" :key=\"room.roomId\">\r\n            <strong>{{ room.name }}</strong><br />\r\n            <span>최대 인원: {{ room.maxCapacity }}</span><br />\r\n            <span>최소 인원: {{ room.minCapacity }}</span><br />\r\n            <span>가격: {{ room.price }}원</span><br />\r\n            <span>설명: {{ room.explanation || \"없음\" }}</span><br />\r\n            <span>서비스: {{ room.serviceInfo || \"없음\" }}</span><br />\r\n            <span>태그: {{ room.tag || \"없음\" }}</span><br />\r\n            <span v-if=\"room.images && room.images.length\">\r\n              이미지: <img :src=\"room.images[0]\" alt=\"방 이미지\" style=\"max-width: 200px;\" />\r\n            </span><br />\r\n            <span>남은 방 수: {{ room.availableRooms }}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p v-else>예약 가능한 방이 없습니다.</p>\r\n    </div>\r\n    <p v-else>데이터를 불러오는 중...</p>\r\n    <router-link :to=\"`/sub-home/${placesData?.accommodation?.category || '호텔'}`\">카테고리로 돌아가기</router-link> |\r\n    <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"Places\",\r\n  data() {\r\n    return {\r\n      placesData: null,\r\n    };\r\n  },\r\n  computed: {\r\n    accommodationId() {\r\n      return this.$route.params.accommodationId;\r\n    },\r\n    checkInDate() {\r\n      return this.$route.params.checkInDate;\r\n    },\r\n    checkOutDate() {\r\n      return this.$route.params.checkOutDate;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchPlacesData();\r\n  },\r\n  methods: {\r\n    async fetchPlacesData() {\r\n      try {\r\n        const response = await api.get(\r\n          `/api/places/${this.accommodationId}/${this.checkInDate}/${this.checkOutDate}`\r\n        );\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.placesData = result.data;\r\n          console.log(\"Places 데이터 조회 성공:\", this.placesData);\r\n        } else {\r\n          console.error(\"Places 데이터 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Places 데이터 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.places-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n.accommodation-info {\r\n  margin-bottom: 30px;\r\n}\r\n.rooms-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n.rooms-list li {\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}