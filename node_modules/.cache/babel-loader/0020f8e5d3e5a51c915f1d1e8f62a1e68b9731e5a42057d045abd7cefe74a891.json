{"ast":null,"code":"import api from \"../api\";\nexport default {\n  name: \"LocationHome\",\n  data() {\n    return {\n      locationHomeData: null\n    };\n  },\n  computed: {\n    category() {\n      return this.$route.params.category;\n    },\n    location() {\n      return this.$route.params.location;\n    }\n  },\n  created() {\n    this.fetchLocationHomeData();\n  },\n  methods: {\n    async fetchLocationHomeData() {\n      try {\n        const response = await api.get(`/api/sub-home/${this.category}/${this.location}`);\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.locationHomeData = result.data;\n          console.log(\"Location Home 데이터 조회 성공:\", this.locationHomeData);\n        } else {\n          console.error(\"Location Home 데이터 조회 실패:\", result);\n        }\n      } catch (error) {\n        console.error(\"Location Home 데이터 조회 오류:\", error.response?.data || error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","locationHomeData","computed","category","$route","params","location","created","fetchLocationHomeData","methods","response","get","result","status","errorCode","console","log","error","message"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LocationHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"location-home-container\">\r\n    <h2>{{ category }} - {{ location }} 페이지</h2>\r\n    <div v-if=\"locationHomeData\">\r\n      <!-- HomeResponseDTO 데이터 표시 (가정) -->\r\n      <h3>숙소 목록</h3>\r\n      <ul>\r\n        <li v-for=\"item in locationHomeData.accommodations\" :key=\"item.accommodationId\">\r\n          {{ item.name }} - {{ item.location }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <p v-else>데이터를 불러오는 중...</p>\r\n    <router-link :to=\"`/sub-home/${category}`\">카테고리로 돌아가기</router-link> |\r\n    <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"LocationHome\",\r\n  data() {\r\n    return {\r\n      locationHomeData: null,\r\n    };\r\n  },\r\n  computed: {\r\n    category() {\r\n      return this.$route.params.category;\r\n    },\r\n    location() {\r\n      return this.$route.params.location;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchLocationHomeData();\r\n  },\r\n  methods: {\r\n    async fetchLocationHomeData() {\r\n      try {\r\n        const response = await api.get(`/api/sub-home/${this.category}/${this.location}`);\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.locationHomeData = result.data;\r\n          console.log(\"Location Home 데이터 조회 성공:\", this.locationHomeData);\r\n        } else {\r\n          console.error(\"Location Home 데이터 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Location Home 데이터 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.location-home-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"AAmBA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAQ;IACpC,CAAC;IACDG,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,QAAQ;IACpC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,qBAAqB,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,GAAG,CAACa,GAAG,CAAC,iBAAiB,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACG,QAAQ,EAAE,CAAC;QACjF,MAAMM,MAAK,GAAIF,QAAQ,CAACV,IAAI;QAC5B,IAAIY,MAAM,CAACC,MAAK,KAAM,GAAE,IAAK,CAACD,MAAM,CAACE,SAAS,EAAE;UAC9C,IAAI,CAACb,gBAAe,GAAIW,MAAM,CAACZ,IAAI;UACnCe,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACf,gBAAgB,CAAC;QAChE,OAAO;UACLc,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEL,MAAM,CAAC;QACnD;MACF,EAAE,OAAOK,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACP,QAAQ,EAAEV,IAAG,IAAKiB,KAAK,CAACC,OAAO,CAAC;MAClF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}