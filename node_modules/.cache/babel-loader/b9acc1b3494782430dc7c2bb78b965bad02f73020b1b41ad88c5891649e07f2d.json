{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"로그인\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_cache[3] || (_cache[3] = _createTextVNode(\"아이디: \")), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", null, [_cache[4] || (_cache[4] = _createTextVNode(\"비밀번호: \")), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"로그인\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"회원가입\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_createTextVNode","$event","$data","username","required","type","password","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LoginForm.vue"],"sourcesContent":["현재 LoginForm.vue 코드를 보면, 로그인 후 홈(/)으로 바로 이동하고 있어요. 하지만 이전 요구사항에서 \"로그인 후 원래 페이지로 돌아가게\" 해야 하니까, redirect 쿼리를 반영하도록 수정해야 합니다. 또한, PlaceDetail.vue에서 userId를 사용 중인데, 현재 localStorage에 userId를 저장하지 않고 있으니 이 부분도 추가하겠습니다.\r\n\r\n수정해야 할 사항\r\n로그인 성공 후 리다이렉트:\r\nthis.$router.push(\"/\") → redirect 쿼리로 이동.\r\nuserId 저장:\r\nlocalStorage에 userId 추가.\r\n에러 처리 개선 (선택적):\r\n현재 괜찮지만, errorMessage 표시를 더 명확히.\r\n수정된 LoginForm.vue\r\nvue\r\n\r\n접기\r\n\r\n자동 줄바꿈\r\n\r\n복사\r\n<template>\r\n  <div class=\"login-container\">\r\n    <h2>로그인</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div>\r\n        <label>아이디: <input v-model=\"username\" required /></label>\r\n      </div>\r\n      <div>\r\n        <label>비밀번호: <input type=\"password\" v-model=\"password\" required /></label>\r\n      </div>\r\n      <button type=\"submit\">로그인</button>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n    </form>\r\n    <router-link to=\"/register\">회원가입</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.errorMessage = \"\";\r\n      try {\r\n        const response = await api.post(\"/api/auth/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답:\", result);\r\n\r\n        if (result.data && result.data.accessToken) {\r\n          console.log(\"로그인 성공 - 토큰:\", result.data.accessToken);\r\n          localStorage.setItem(\"accessToken\", result.data.accessToken);\r\n          localStorage.setItem(\"refreshToken\", result.data.refreshToken);\r\n          localStorage.setItem(\"userId\", result.data.userId); // userId 추가\r\n          console.log(\"저장된 accessToken 확인:\", localStorage.getItem(\"accessToken\"));\r\n          console.log(\"저장된 refreshToken 확인:\", localStorage.getItem(\"refreshToken\"));\r\n          console.log(\"저장된 userId 확인:\", localStorage.getItem(\"userId\"));\r\n\r\n          // redirect 쿼리 확인 후 이동\r\n          const redirect = this.$route.query.redirect || \"/\";\r\n          this.$router.push(redirect);\r\n        } else {\r\n          this.errorMessage = result.message || \"로그인에 실패했습니다.\";\r\n          console.error(\"로그인 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        const errorResponse = error.response?.data;\r\n        this.errorMessage = errorResponse?.message || \"로그인 중 오류가 발생했습니다.\";\r\n        console.error(\"로그인 실패:\", errorResponse || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;EAkBOA,KAAK,EAAC;AAAiB;;EAlB9BC,GAAA;EA4B6BD,KAAK,EAAC;;;;uBAVjCE,mBAAA,CAaM,OAbNC,UAaM,G,0BAZJC,mBAAA,CAAY,YAAR,KAAG,sBACPA,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MApBjBC,cAAA,KAAAC,IAAA,KAoB2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCJ,mBAAA,CAEM,cADJA,mBAAA,CAAyD,gB,0BAtBjEO,gBAAA,CAsBe,OAAK,I,gBAAAP,mBAAA,CAAqC;IAtBzD,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAsBoCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAC,QAAQ,E,OAEtCV,mBAAA,CAEM,cADJA,mBAAA,CAA0E,gB,0BAzBlFO,gBAAA,CAyBe,QAAM,I,gBAAAP,mBAAA,CAAqD;IAA9CY,IAAI,EAAC,UAAU;IAzB3C,uBAAAV,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAyBqDC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAI,QAAQ,E,iCAEvDb,mBAAA,CAAkC;IAA1BY,IAAI,EAAC;EAAQ,GAAC,KAAG,sBAChBH,KAAA,CAAAK,YAAY,I,cAArBhB,mBAAA,CAA2D,KAA3DiB,UAA2D,EAAAC,gBAAA,CAAnBP,KAAA,CAAAK,YAAY,oBA5B1DG,mBAAA,e,4BA8BIC,YAAA,CAA8CC,sBAAA;IAAjCC,EAAE,EAAC;EAAW;IA9B/BC,OAAA,EAAAC,QAAA,CA8BgC,MAAIpB,MAAA,QAAAA,MAAA,OA9BpCK,gBAAA,CA8BgC,MAAI,E;IA9BpCgB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}