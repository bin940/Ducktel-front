{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"logo\"\n};\nconst _hoisted_3 = {\n  class: \"menu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"DUCK TEL\")])),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_3, [$data.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: \"/mypage\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"마이페이지\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleAuth && $options.handleAuth(...args))\n  }, _toDisplayString($data.isLoggedIn ? \"로그아웃\" : \"로그인\"), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_3","$data","isLoggedIn","_createBlock","key","_createCommentVNode","onClick","args","$options","handleAuth"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar\">\r\n    <div class=\"logo\">\r\n      <router-link to=\"/\">DUCK TEL</router-link>\r\n    </div>\r\n    <div class=\"menu\">\r\n      <router-link to=\"/mypage\" v-if=\"isLoggedIn\">마이페이지</router-link>\r\n      <button @click=\"handleAuth\">{{ isLoggedIn ? \"로그아웃\" : \"로그인\" }}</button>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"NavBar\",\r\n  data() {\r\n    return {\r\n      isLoggedIn: false\r\n    };\r\n  },\r\n  created() {\r\n    this.updateLoginStatus();\r\n    window.addEventListener(\"storage\", this.updateLoginStatus);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener(\"storage\", this.updateLoginStatus);\r\n  },\r\n  watch: {\r\n    '$route'() {\r\n      if (this.$el) {\r\n        this.updateLoginStatus();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleAuth() {\r\n      if (this.isLoggedIn) {\r\n        this.logout();\r\n      } else {\r\n        this.$router.push(\"/login\");\r\n      }\r\n    },\r\n    logout() {\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      const loginType = localStorage.getItem(\"loginType\");\r\n\r\n      if (!refreshToken || !loginType) {\r\n        console.error(\"로그아웃 실패: 저장된 로그인 정보 없음\");\r\n        return;\r\n      }\r\n\r\n      api.post(\"/api/auth/logout\", { refreshToken, loginType })\r\n        .then(response => {\r\n          console.log(\"로그아웃 성공:\", response.data);\r\n\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          localStorage.removeItem(\"loginType\");\r\n\r\n          console.log(\"로그아웃 후 localStorage 값:\", localStorage.getItem(\"accessToken\"));\r\n\r\n          this.updateLoginStatus();\r\n          this.$router.push(\"/\");\r\n        })\r\n        .catch(error => {\r\n          console.error(\"로그아웃 실패:\", error.response?.data?.message || error.message);\r\n        });\r\n    },\r\n    updateLoginStatus() {\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      this.isLoggedIn = !!accessToken;\r\n      this.$forceUpdate();\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAM;;EAGZA,KAAK,EAAC;AAAM;;;uBAJnBC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAA0CC,sBAAA;IAA7BC,EAAE,EAAC;EAAG;IAHzBC,OAAA,EAAAC,QAAA,CAG0B,MAAQC,MAAA,QAAAA,MAAA,OAHlCC,gBAAA,CAG0B,UAAQ,E;IAHlCC,CAAA;QAKIT,mBAAA,CAGM,OAHNU,UAGM,GAF4BC,KAAA,CAAAC,UAAU,I,cAA1CC,YAAA,CAA+DV,sBAAA;IANrEW,GAAA;IAMmBV,EAAE,EAAC;;IANtBC,OAAA,EAAAC,QAAA,CAMkD,MAAKC,MAAA,QAAAA,MAAA,OANvDC,gBAAA,CAMkD,OAAK,E;IANvDC,CAAA;QAAAM,mBAAA,gBAOMf,mBAAA,CAAsE;IAA7DgB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAAKN,KAAA,CAAAC,UAAU,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}