{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"LoginForm\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = \"\";\n      try {\n        const response = await api.post(\"/api/auth/login\", {\n          username: this.username,\n          password: this.password\n        });\n        const result = response.data;\n        console.log(\"백엔드 응답:\", result); // 디버깅용\n\n        if (result.status === 200 && !result.errorCode) {\n          console.log(\"로그인 성공:\", result);\n          this.$router.push(\"/home\"); // 홈 페이지로 이동\n        } else {\n          this.errorMessage = result.message || \"로그인에 실패했습니다.\";\n          console.error(\"로그인 실패:\", result);\n        }\n      } catch (error) {\n        const errorResponse = error.response?.data;\n        this.errorMessage = errorResponse?.message || \"로그인 중 오류가 발생했습니다.\";\n        console.error(\"로그인 실패:\", errorResponse || error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","password","errorMessage","methods","handleLogin","response","post","result","console","log","status","errorCode","$router","push","message","error","errorResponse"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LoginForm.vue"],"sourcesContent":["<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.errorMessage = \"\";\r\n      try {\r\n        const response = await api.post(\"/api/auth/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답:\", result); // 디버깅용\r\n\r\n        if (result.status === 200 && !result.errorCode) {\r\n          console.log(\"로그인 성공:\", result);\r\n          this.$router.push(\"/home\"); // 홈 페이지로 이동\r\n        } else {\r\n          this.errorMessage = result.message || \"로그인에 실패했습니다.\";\r\n          console.error(\"로그인 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        const errorResponse = error.response?.data;\r\n        this.errorMessage = errorResponse?.message || \"로그인 중 오류가 발생했습니다.\";\r\n        console.error(\"로그인 실패:\", errorResponse || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";AACA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAE;MACtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE;UACjDN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,MAAMM,MAAK,GAAIF,QAAQ,CAACN,IAAI;QAC5BS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC,EAAE;;QAEhC,IAAIA,MAAM,CAACG,MAAK,KAAM,GAAE,IAAK,CAACH,MAAM,CAACI,SAAS,EAAE;UAC9CH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;UAC9B,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC,EAAE;QAC9B,OAAO;UACL,IAAI,CAACX,YAAW,GAAIK,MAAM,CAACO,OAAM,IAAK,cAAc;UACpDN,OAAO,CAACO,KAAK,CAAC,SAAS,EAAER,MAAM,CAAC;QAClC;MACF,EAAE,OAAOQ,KAAK,EAAE;QACd,MAAMC,aAAY,GAAID,KAAK,CAACV,QAAQ,EAAEN,IAAI;QAC1C,IAAI,CAACG,YAAW,GAAIc,aAAa,EAAEF,OAAM,IAAK,mBAAmB;QACjEN,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEC,aAAY,IAAKD,KAAK,CAACD,OAAO,CAAC;MAC1D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}