{"ast":null,"code":"import api from \"../api\"; // 설정한 axios 인스턴스 가져오기\n\nexport default {\n  name: \"LoginForm\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await api.post(\"/api/auth/login\", {\n          username: this.username,\n          password: this.password\n        });\n        // 성공 시 백엔드에서 반환된 데이터 처리\n        console.log(\"로그인 성공:\", response.data);\n        // 예: 토큰 저장 후 페이지 이동\n        // localStorage.setItem(\"token\", response.data.token);\n        // this.$router.push(\"/dashboard\");\n      } catch (error) {\n        // 에러 처리\n        console.error(\"로그인 실패:\", error.response?.data || error.message);\n        alert(\"로그인에 실패했습니다. 아이디와 비밀번호를 확인해주세요.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","password","methods","handleLogin","response","post","console","log","error","message","alert"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>로그인</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div>\r\n        <label for=\"username\">아이디:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"아이디를 입력하세요\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n    <p>\r\n      계정이 없으신가요?\r\n      <a href=\"/register\">회원가입</a>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\"; // 설정한 axios 인스턴스 가져오기\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        const response = await api.post(\"/api/auth/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n        // 성공 시 백엔드에서 반환된 데이터 처리\r\n        console.log(\"로그인 성공:\", response.data);\r\n        // 예: 토큰 저장 후 페이지 이동\r\n        // localStorage.setItem(\"token\", response.data.token);\r\n        // this.$router.push(\"/dashboard\");\r\n      } catch (error) {\r\n        // 에러 처리\r\n        console.error(\"로그인 실패:\", error.response?.data || error.message);\r\n        alert(\"로그인에 실패했습니다. 아이디와 비밀번호를 확인해주세요.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":"AAgCA,OAAOA,GAAE,MAAO,QAAQ,EAAE;;AAE1B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,GAAG,CAACQ,IAAI,CAAC,iBAAiB,EAAE;UACjDL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF;QACAK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACL,IAAI,CAAC;QACrC;QACA;QACA;MACF,EAAE,OAAOS,KAAK,EAAE;QACd;QACAF,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACJ,QAAQ,EAAEL,IAAG,IAAKS,KAAK,CAACC,OAAO,CAAC;QAC/DC,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}