{"ast":null,"code":"import api from \"../api\";\nexport default {\n  name: \"HomePage\",\n  data() {\n    return {\n      homeData: null,\n      selectedCategory: \"\",\n      checkInDate: new Date().toISOString().split(\"T\")[0],\n      checkOutDate: new Date(Date.now() + 86400000).toISOString().split(\"T\")[0],\n      currentPage: 1,\n      itemsPerPage: 5\n    };\n  },\n  // computed 및 기타 코드 생략\n  created() {\n    this.fetchHomeData();\n  },\n  methods: {\n    async fetchHomeData() {\n      try {\n        const response = await api.get(\"/api/home\");\n        console.log(\"API 호출 응답:\", response); // 전체 응답\n        console.log(\"응답 데이터:\", response.data); // data 필드\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.homeData = result.data;\n          console.log(\"홈 데이터 조회 성공:\", this.homeData);\n          console.log(\"categoryAccommodations:\", this.homeData?.categoryAccommodations);\n        } else {\n          console.error(\"홈 데이터 조회 실패:\", result);\n        }\n      } catch (error) {\n        console.error(\"홈 데이터 조회 오류:\", error.response?.data || error.message);\n      }\n    }\n    // 나머지 메서드 생략\n  }\n};","map":{"version":3,"names":["api","name","data","homeData","selectedCategory","checkInDate","Date","toISOString","split","checkOutDate","now","currentPage","itemsPerPage","created","fetchHomeData","methods","response","get","console","log","result","status","errorCode","categoryAccommodations","error","message"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\HomePage.vue"],"sourcesContent":["<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      homeData: null,\r\n      selectedCategory: \"\",\r\n      checkInDate: new Date().toISOString().split(\"T\")[0],\r\n      checkOutDate: new Date(Date.now() + 86400000).toISOString().split(\"T\")[0],\r\n      currentPage: 1,\r\n      itemsPerPage: 5,\r\n    };\r\n  },\r\n  // computed 및 기타 코드 생략\r\n  created() {\r\n    this.fetchHomeData();\r\n  },\r\n  methods: {\r\n    async fetchHomeData() {\r\n      try {\r\n        const response = await api.get(\"/api/home\");\r\n        console.log(\"API 호출 응답:\", response); // 전체 응답\r\n        console.log(\"응답 데이터:\", response.data); // data 필드\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.homeData = result.data;\r\n          console.log(\"홈 데이터 조회 성공:\", this.homeData);\r\n          console.log(\"categoryAccommodations:\", this.homeData?.categoryAccommodations);\r\n        } else {\r\n          console.error(\"홈 데이터 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"홈 데이터 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    // 나머지 메서드 생략\r\n  },\r\n};\r\n</script>"],"mappings":"AACA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnDC,YAAY,EAAE,IAAIH,IAAI,CAACA,IAAI,CAACI,GAAG,CAAC,IAAI,QAAQ,CAAC,CAACH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzEG,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMhB,GAAG,CAACiB,GAAG,CAAC,WAAW,CAAC;QAC3CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,QAAQ,CAAC,EAAE;QACrCE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACd,IAAI,CAAC,EAAE;QACvC,MAAMkB,MAAK,GAAIJ,QAAQ,CAACd,IAAI;QAC5B,IAAIkB,MAAM,CAACC,MAAK,KAAM,GAAE,IAAK,CAACD,MAAM,CAACE,SAAS,EAAE;UAC9C,IAAI,CAACnB,QAAO,GAAIiB,MAAM,CAAClB,IAAI;UAC3BgB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAChB,QAAQ,CAAC;UAC1Ce,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAChB,QAAQ,EAAEoB,sBAAsB,CAAC;QAC/E,OAAO;UACLL,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEJ,MAAM,CAAC;QACvC;MACF,EAAE,OAAOI,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACR,QAAQ,EAAEd,IAAG,IAAKsB,KAAK,CAACC,OAAO,CAAC;MACtE;IACF;IACA;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}