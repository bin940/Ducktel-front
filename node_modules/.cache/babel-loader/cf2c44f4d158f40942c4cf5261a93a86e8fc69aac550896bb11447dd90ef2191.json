{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"홈\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/mypage\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"마이페이지\")])),\n    _: 1 /* STABLE */\n  }), $data.isLoggedIn ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","$data","isLoggedIn","key","onClick","args","$options","logout","_createCommentVNode"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar\">\r\n    <router-link to=\"/\">홈</router-link>\r\n    <router-link to=\"/mypage\">마이페이지</router-link>\r\n\r\n    <button @click=\"logout\" v-if=\"isLoggedIn\">로그아웃</button>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"NavBar\",\r\n  data() {\r\n    return {\r\n      isLoggedIn: !!localStorage.getItem(\"accessToken\"),\r\n    };\r\n  },\r\n  methods: {\r\n    logout() {\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      const loginType = localStorage.getItem(\"loginType\");\r\n\r\n      if (!refreshToken || !loginType) {\r\n        console.error(\"로그아웃 실패: 저장된 로그인 정보 없음\");\r\n        return;\r\n      }\r\n\r\n      api.post(\"/api/auth/logout\", { refreshToken, loginType })\r\n        .then(response => {\r\n          console.log(\"로그아웃 성공:\", response.data);\r\n\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          localStorage.removeItem(\"loginType\");\r\n\r\n          if (response.data.data) {\r\n            window.location.href = response.data.data; \r\n          } else {\r\n            this.$router.push(\"/\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(\"로그아웃 실패:\", error.response?.data?.message || error.message);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background: #007bff;\r\n  color: white;\r\n}\r\n.navbar a {\r\n  color: white;\r\n  margin: 0 10px;\r\n  text-decoration: none;\r\n}\r\nbutton {\r\n  background-color: white;\r\n  color: #007bff;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;;uBAAnBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAAmCC,sBAAA;IAAtBC,EAAE,EAAC;EAAG;IAFvBC,OAAA,EAAAC,QAAA,CAEwB,MAACC,MAAA,QAAAA,MAAA,OAFzBC,gBAAA,CAEwB,GAAC,E;IAFzBC,CAAA;MAGIP,YAAA,CAA6CC,sBAAA;IAAhCC,EAAE,EAAC;EAAS;IAH7BC,OAAA,EAAAC,QAAA,CAG8B,MAAKC,MAAA,QAAAA,MAAA,OAHnCC,gBAAA,CAG8B,OAAK,E;IAHnCC,CAAA;MAKkCC,KAAA,CAAAC,UAAU,I,cAAxCX,mBAAA,CAAuD;IAL3DY,GAAA;IAKaC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAoB,MAAI,KALlDG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}