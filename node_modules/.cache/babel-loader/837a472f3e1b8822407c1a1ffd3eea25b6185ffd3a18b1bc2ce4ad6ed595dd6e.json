{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"내 정보\", -1 /* HOISTED */)), $data.userInfo !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updateProfile && $options.updateProfile(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"아이디: \" + _toDisplayString($data.userInfo.username), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"이메일:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editUser.email = $event),\n    placeholder: \"이메일\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editUser.email]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"전화번호:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editUser.phoneNumber = $event),\n    placeholder: \"전화번호\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editUser.phoneNumber]])]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"수정\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"비밀번호 재설정\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"새 비밀번호:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newPassword = $event),\n    placeholder: \"새 비밀번호\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"재설정\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.deleteProfile && $options.deleteProfile(...args)),\n    class: \"delete-btn\"\n  }, \"회원 탈퇴\")])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"정보를 불러오는 중...\")), _createVNode(_component_router_link, {\n    to: \"/mypage\"\n  }, {\n    default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"마이페이지로 돌아가기\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","userInfo","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","updateProfile","_toDisplayString","username","$event","editUser","email","placeholder","phoneNumber","type","resetPassword","newPassword","onClick","deleteProfile","_hoisted_3","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h2>내 정보</h2>\r\n    <div v-if=\"userInfo !== null\">\r\n      \r\n      <form @submit.prevent=\"updateProfile\">\r\n        <div>\r\n          <p>아이디: {{ userInfo.username }}</p>\r\n        </div>\r\n        <div>\r\n          <label>이메일:</label>\r\n          <input v-model=\"editUser.email\" placeholder=\"이메일\" />\r\n        </div>\r\n        <div>\r\n          <label>전화번호:</label>\r\n          <input v-model=\"editUser.phoneNumber\" placeholder=\"전화번호\" />\r\n        </div>\r\n        <button type=\"submit\">수정</button>\r\n      </form>\r\n\r\n      <h3>비밀번호 재설정</h3>\r\n      <form @submit.prevent=\"resetPassword\">\r\n        <div>\r\n          <label>새 비밀번호:</label>\r\n          <input type=\"password\" v-model=\"newPassword\" placeholder=\"새 비밀번호\" />\r\n        </div>\r\n        <button type=\"submit\">재설정</button>\r\n      </form>\r\n\r\n      <button @click=\"deleteProfile\" class=\"delete-btn\">회원 탈퇴</button>\r\n    </div>\r\n    <p v-else>정보를 불러오는 중...</p>\r\n    <router-link to=\"/mypage\">마이페이지로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"UserProfile\",\r\n  data() {\r\n    return {\r\n      userInfo: null,\r\n      editUser: { name: \"\", email: \"\", phoneNumber: \"\" },\r\n      newPassword: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProfile();\r\n  },\r\n  methods: {\r\n    async fetchProfile() {\r\n      try {\r\n        const response = await api.get(\"/api/users/profile\");\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답 전체:\", result);\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.userInfo = result.data;\r\n          this.editUser = { ...result.data };\r\n          console.log(\"프로필 조회 성공:\", this.userInfo);\r\n        } else {\r\n          console.error(\"프로필 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"프로필 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      try {\r\n        const response = await api.put(\"/api/users/profile\", this.editUser);\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.userInfo = result.data;\r\n          alert(\"정보 수정 성공!\");\r\n        } else {\r\n          alert(\"정보 수정 실패: \" + (result.message || \"오류 발생\"));\r\n        }\r\n      } catch (error) {\r\n        alert(\"정보 수정 오류: \" + (error.response?.data.message || error.message));\r\n      }\r\n    },\r\n    async resetPassword() {\r\n      try {\r\n        const response = await api.post(\"/api/users/password-reset\", { password: this.newPassword });\r\n        const result = response.data;\r\n        if (result === \"비밀번호 비밀번호가 변경 되었습니다 성공\") {\r\n          alert(\"비밀번호 재설정 성공!\");\r\n          this.newPassword = \"\";\r\n        } else {\r\n          alert(\"비밀번호 재설정 실패\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"비밀번호 재설정 오류: \" + (error.response?.data || error.message));\r\n      }\r\n    },\r\n    async deleteProfile() {\r\n      if (confirm(\"정말 탈퇴하시겠습니까?\")) {\r\n        try {\r\n          const response = await api.delete(\"/api/users/profile/\" + this.userInfo.userId);\r\n          const result = response.data;\r\n          if (result === \"회원 탈퇴 성공\") {\r\n            localStorage.removeItem(\"accessToken\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n            alert(\"회원 탈퇴 성공!\");\r\n            this.$router.push(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(\"회원 탈퇴 실패\");\r\n          }\r\n        } catch (error) {\r\n          alert(\"회원 탈퇴 오류: \" + (error.response?.data || error.message));\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n.delete-btn {\r\n  background-color: #dc3545;\r\n  margin-top: 20px;\r\n}\r\n.delete-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EADhCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAgCM,OAhCNC,UAgCM,G,4BA/BJC,mBAAA,CAAa,YAAT,MAAI,sBACGC,KAAA,CAAAC,QAAQ,a,cAAnBJ,mBAAA,CA2BM,OA9BVK,UAAA,GAKMH,mBAAA,CAaO;IAbAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCP,mBAAA,CAEM,cADJA,mBAAA,CAAmC,WAAhC,OAAK,GAAAU,gBAAA,CAAGT,KAAA,CAAAC,QAAQ,CAACS,QAAQ,iB,GAE9BX,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmB,eAAZ,MAAI,sB,gBACXA,mBAAA,CAAoD;IAX9D,uBAAAK,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAW0BX,KAAA,CAAAY,QAAQ,CAACC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAA5Bd,KAAA,CAAAY,QAAQ,CAACC,KAAK,E,KAEhCd,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAoB,eAAb,OAAK,sB,gBACZA,mBAAA,CAA2D;IAfrE,uBAAAK,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAe0BX,KAAA,CAAAY,QAAQ,CAACG,WAAW,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAlCd,KAAA,CAAAY,QAAQ,CAACG,WAAW,E,+BAEtChB,mBAAA,CAAiC;IAAzBiB,IAAI,EAAC;EAAQ,GAAC,IAAE,qB,wDAG1BjB,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAMO;IANAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MArBnBC,cAAA,KAAAC,IAAA,KAqB6BC,QAAA,CAAAU,aAAA,IAAAV,QAAA,CAAAU,aAAA,IAAAX,IAAA,CAAa;MAClCP,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAsB,eAAf,SAAO,sB,gBACdA,mBAAA,CAAoE;IAA7DiB,IAAI,EAAC,UAAU;IAxBhC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAwB0CX,KAAA,CAAAkB,WAAW,GAAAP,MAAA;IAAEG,WAAW,EAAC;iDAAzBd,KAAA,CAAAkB,WAAW,E,iCAE7CnB,mBAAA,CAAkC;IAA1BiB,IAAI,EAAC;EAAQ,GAAC,KAAG,qB,4BAG3BjB,mBAAA,CAAgE;IAAvDoB,OAAK,EAAAf,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAa,aAAA,IAAAb,QAAA,CAAAa,aAAA,IAAAd,IAAA,CAAa;IAAEX,KAAK,EAAC;KAAa,OAAK,E,oBAEzDE,mBAAA,CAA2B,KA/B/BwB,UAAA,EA+Bc,eAAa,IACvBC,YAAA,CAAmDC,sBAAA;IAAtCC,EAAE,EAAC;EAAS;IAhC7BC,OAAA,EAAAC,QAAA,CAgC8B,MAAWtB,MAAA,SAAAA,MAAA,QAhCzCuB,gBAAA,CAgC8B,aAAW,E;IAhCzCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}