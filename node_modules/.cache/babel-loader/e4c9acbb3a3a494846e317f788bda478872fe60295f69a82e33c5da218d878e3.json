{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"LoginForm\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await api.post(\"/api/auth/login\", {\n          username: this.username,\n          password: this.password\n        });\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          localStorage.setItem(\"accessToken\", result.data.accessToken);\n          localStorage.setItem(\"userId\", result.data.userId); // userId 저장\n          const redirect = this.$route.query.redirect || \"/\";\n          this.$router.push(redirect);\n        } else {\n          alert(\"로그인 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"로그인 오류:\", error.response?.data || error.message);\n        alert(\"로그인 중 오류 발생\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","password","methods","login","response","post","result","status","errorCode","localStorage","setItem","accessToken","userId","redirect","$route","query","$router","push","alert","message","error","console"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>로그인</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div>\r\n        <label for=\"username\">아이디:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"아이디를 입력하세요\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    <p>\r\n      <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await api.post(\"/api/auth/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          localStorage.setItem(\"accessToken\", result.data.accessToken);\r\n          localStorage.setItem(\"userId\", result.data.userId); // userId 저장\r\n          const redirect = this.$route.query.redirect || \"/\";\r\n          this.$router.push(redirect);\r\n        } else {\r\n          alert(\"로그인 실패: \" + result.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"로그인 오류:\", error.response?.data || error.message);\r\n        alert(\"로그인 중 오류 발생\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n/* 에러 메시지 스타일 */\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":";AAgCA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,GAAG,CAACQ,IAAI,CAAC,iBAAiB,EAAE;UACjDL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,MAAMK,MAAK,GAAIF,QAAQ,CAACL,IAAI;QAC5B,IAAIO,MAAM,CAACC,MAAK,KAAM,GAAE,IAAK,CAACD,MAAM,CAACE,SAAS,EAAE;UAC9CC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,MAAM,CAACP,IAAI,CAACY,WAAW,CAAC;UAC5DF,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,MAAM,CAACP,IAAI,CAACa,MAAM,CAAC,EAAE;UACpD,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAO,IAAK,GAAG;UAClD,IAAI,CAACG,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAAC;QAC7B,OAAO;UACLK,KAAK,CAAC,UAAS,GAAIZ,MAAM,CAACa,OAAO,CAAC;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAChB,QAAQ,EAAEL,IAAG,IAAKqB,KAAK,CAACD,OAAO,CAAC;QAC/DD,KAAK,CAAC,aAAa,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}