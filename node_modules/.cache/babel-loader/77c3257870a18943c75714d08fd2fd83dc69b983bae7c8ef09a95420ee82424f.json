{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HomePage from \"../components/HomePage.vue\";\nimport LoginForm from \"../components/LoginForm.vue\";\nimport RegisterForm from \"../components/RegisterForm.vue\";\nimport MyPage from \"../components/MyPage.vue\";\nimport UserProfile from \"../components/UserProfile.vue\";\nimport UserBooking from \"../components/UserBooking.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"Home\",\n  component: HomePage\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: LoginForm\n}, {\n  path: \"/register\",\n  name: \"Register\",\n  component: RegisterForm\n}, {\n  path: \"/mypage\",\n  name: \"MyPage\",\n  component: MyPage\n}, {\n  path: \"/profile\",\n  name: \"Profile\",\n  component: UserProfile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/booking\",\n  name: \"Booking\",\n  component: UserBooking,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 네비게이션 가드 추가\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = !!localStorage.getItem(\"accessToken\");\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  console.log(\"이동 시도:\", to.path, \"로그인 상태:\", isLoggedIn);\n  if (requiresAuth && !isLoggedIn) {\n    console.log(\"로그인 필요, 리다이렉트 to /login\");\n    next(\"/login\"); // 로그인이 필요한 경로인데 로그인 안 됨 → /login\n  } else {\n    next(); // 정상 진행\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomePage","LoginForm","RegisterForm","MyPage","UserProfile","UserBooking","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isLoggedIn","localStorage","getItem","matched","some","record","console","log"],"sources":["C:/Users/mycoms/Desktop/study/duckfront/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport HomePage from \"../components/HomePage.vue\";\r\nimport LoginForm from \"../components/LoginForm.vue\";\r\nimport RegisterForm from \"../components/RegisterForm.vue\";\r\nimport MyPage from \"../components/MyPage.vue\";\r\nimport UserProfile from \"../components/UserProfile.vue\";\r\nimport UserBooking from \"../components/UserBooking.vue\";\r\n\r\nconst routes = [\r\n  { path: \"/\", name: \"Home\", component: HomePage },\r\n  { path: \"/login\", name: \"Login\", component: LoginForm },\r\n  { path: \"/register\", name: \"Register\", component: RegisterForm },\r\n  { path: \"/mypage\", name: \"MyPage\", component: MyPage },\r\n  { path: \"/profile\", name: \"Profile\", component: UserProfile, meta: { requiresAuth: true } },\r\n  { path: \"/booking\", name: \"Booking\", component: UserBooking, meta: { requiresAuth: true } },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\n// 네비게이션 가드 추가\r\nrouter.beforeEach((to, from, next) => {\r\n  const isLoggedIn = !!localStorage.getItem(\"accessToken\"); \r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n\r\n  console.log(\"이동 시도:\", to.path, \"로그인 상태:\", isLoggedIn); \r\n\r\n  if (requiresAuth && !isLoggedIn) {\r\n    console.log(\"로그인 필요, 리다이렉트 to /login\");\r\n    next(\"/login\"); // 로그인이 필요한 경로인데 로그인 안 됨 → /login\r\n  } else {\r\n    next(); // 정상 진행\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,WAAW,MAAM,+BAA+B;AAEvD,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAET;AAAS,CAAC,EAChD;EAAEO,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAER;AAAU,CAAC,EACvD;EAAEM,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEP;AAAa,CAAC,EAChE;EAAEK,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEN;AAAO,CAAC,EACtD;EAAEI,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEL,WAAW;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC3F;EAAEJ,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEJ,WAAW;EAAEK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,CAC5F;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAAC,CAAC;EAC3BO;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACxD,MAAMT,YAAY,GAAGI,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC;EAExEa,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,EAAE,CAACR,IAAI,EAAE,SAAS,EAAEW,UAAU,CAAC;EAErD,IAAIP,YAAY,IAAI,CAACO,UAAU,EAAE;IAC/BM,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCR,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}