{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"LoginForm\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = \"\";\n      try {\n        const response = await api.post(\"/api/auth/login\", {\n          username: this.username,\n          password: this.password\n        });\n        const result = response.data;\n        console.log(\"백엔드 응답:\", result);\n        if (result.data && result.data.accessToken) {\n          console.log(\"로그인 성공 - 토큰:\", result.data.accessToken);\n          localStorage.setItem(\"accessToken\", result.data.accessToken);\n          localStorage.setItem(\"refreshToken\", result.data.refreshToken);\n          console.log(\"저장된 accessToken 확인:\", localStorage.getItem(\"accessToken\"));\n          console.log(\"저장된 refreshToken 확인:\", localStorage.getItem(\"refreshToken\"));\n          this.$router.push(\"/\");\n        } else {\n          this.errorMessage = result.message || \"로그인에 실패했습니다.\";\n          console.error(\"로그인 실패:\", result);\n        }\n      } catch (error) {\n        const errorResponse = error.response?.data;\n        this.errorMessage = errorResponse?.message || \"로그인 중 오류가 발생했습니다.\";\n        console.error(\"로그인 실패:\", errorResponse || error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","password","errorMessage","methods","handleLogin","response","post","result","console","log","accessToken","localStorage","setItem","refreshToken","getItem","$router","push","message","error","errorResponse"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>로그인</h2>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <div>\r\n        <label for=\"username\">아이디:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"아이디를 입력하세요\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    <p>\r\n      <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.errorMessage = \"\";\r\n      try {\r\n        const response = await api.post(\"/api/auth/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답:\", result);\r\n\r\n        if (result.data && result.data.accessToken) {\r\n          console.log(\"로그인 성공 - 토큰:\", result.data.accessToken);\r\n          localStorage.setItem(\"accessToken\", result.data.accessToken); \r\n          localStorage.setItem(\"refreshToken\", result.data.refreshToken); \r\n          console.log(\"저장된 accessToken 확인:\", localStorage.getItem(\"accessToken\"));\r\n          console.log(\"저장된 refreshToken 확인:\", localStorage.getItem(\"refreshToken\"));\r\n          this.$router.push(\"/\"); \r\n        } else {\r\n          this.errorMessage = result.message || \"로그인에 실패했습니다.\";\r\n          console.error(\"로그인 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        const errorResponse = error.response?.data;\r\n        this.errorMessage = errorResponse?.message || \"로그인 중 오류가 발생했습니다.\";\r\n        console.error(\"로그인 실패:\", errorResponse || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n/* 에러 메시지 스타일 */\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":";AAgCA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAE;MACtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE;UACjDN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,MAAMM,MAAK,GAAIF,QAAQ,CAACN,IAAI;QAC5BS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;QAE9B,IAAIA,MAAM,CAACR,IAAG,IAAKQ,MAAM,CAACR,IAAI,CAACW,WAAW,EAAE;UAC1CF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACR,IAAI,CAACW,WAAW,CAAC;UACpDC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,MAAM,CAACR,IAAI,CAACW,WAAW,CAAC;UAC5DC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,MAAM,CAACR,IAAI,CAACc,YAAY,CAAC;UAC9DL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,YAAY,CAACG,OAAO,CAAC,aAAa,CAAC,CAAC;UACvEN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,YAAY,CAACG,OAAO,CAAC,cAAc,CAAC,CAAC;UACzE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,IAAI,CAACd,YAAW,GAAIK,MAAM,CAACU,OAAM,IAAK,cAAc;UACpDT,OAAO,CAACU,KAAK,CAAC,SAAS,EAAEX,MAAM,CAAC;QAClC;MACF,EAAE,OAAOW,KAAK,EAAE;QACd,MAAMC,aAAY,GAAID,KAAK,CAACb,QAAQ,EAAEN,IAAI;QAC1C,IAAI,CAACG,YAAW,GAAIiB,aAAa,EAAEF,OAAM,IAAK,mBAAmB;QACjET,OAAO,CAACU,KAAK,CAAC,SAAS,EAAEC,aAAY,IAAKD,KAAK,CAACD,OAAO,CAAC;MAC1D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}