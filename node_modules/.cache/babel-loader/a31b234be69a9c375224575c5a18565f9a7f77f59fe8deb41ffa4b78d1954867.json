{"ast":null,"code":"import api from \"../api\";\nexport default {\n  name: \"Booking\",\n  data() {\n    return {\n      reservations: null,\n      showEditModal: false,\n      editBooking: {}\n    };\n  },\n  created() {\n    this.fetchReservations();\n  },\n  methods: {\n    async fetchReservations() {\n      try {\n        const response = await api.get(\"/api/users/book\");\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.reservations = result.data;\n          console.log(\"예약 조회 성공:\", this.reservations);\n        } else {\n          console.error(\"예약 조회 실패:\", result);\n        }\n      } catch (error) {\n        console.error(\"예약 조회 오류:\", error.response?.data || error.message);\n      }\n    },\n    editReservation(reservation) {\n      this.editBooking = {\n        ...reservation\n      }; // 전체 복사\n      this.showEditModal = true;\n    },\n    async updateBooking() {\n      try {\n        const response = await api.put(\"/api/users/book\", {\n          bookingId: this.editBooking.bookingId,\n          checkIn: this.editBooking.checkIn,\n          checkOut: this.editBooking.checkOut,\n          numberOfPerson: this.editBooking.numberOfPerson,\n          paymentCompleted: this.editBooking.paymentCompleted,\n          accommodation: this.editBooking.accommodation,\n          room: this.editBooking.room\n        });\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.showEditModal = false;\n          this.fetchReservations(); // 갱신\n          alert(\"예약 수정 성공!\");\n        } else {\n          alert(\"예약 수정 실패: \" + (result.message || \"오류 발생\"));\n        }\n      } catch (error) {\n        alert(\"예약 수정 오류: \" + (error.response?.data.message || error.message));\n      }\n    },\n    async deleteReservation(bookingId) {\n      if (confirm(\"이 예약을 삭제하시겠습니까?\")) {\n        try {\n          const response = await api.delete(`/api/users/book/${bookingId}`);\n          const result = response.data;\n          if (result.status === 200 && !result.errorCode) {\n            this.fetchReservations(); // 갱신\n            alert(\"예약 삭제 성공!\");\n          } else {\n            alert(\"예약 삭제 실패: \" + (result.message || \"오류 발생\"));\n          }\n        } catch (error) {\n          alert(\"예약 삭제 오류: \" + (error.response?.data.message || error.message));\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","reservations","showEditModal","editBooking","created","fetchReservations","methods","response","get","result","status","errorCode","console","log","error","message","editReservation","reservation","updateBooking","put","bookingId","checkIn","checkOut","numberOfPerson","paymentCompleted","accommodation","room","alert","deleteReservation","confirm","delete"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\Booking.vue"],"sourcesContent":["<template>\r\n  <div class=\"booking-container\">\r\n    <h2>내 예약 조회</h2>\r\n    <div v-if=\"reservations && reservations.length\">\r\n      <ul>\r\n        <li v-for=\"reservation in reservations\" :key=\"reservation.bookingId\">\r\n          <p><strong>숙소:</strong> {{ reservation.accommodation.name }}</p>\r\n          <p><strong>룸:</strong> {{ reservation.room.name }}</p>\r\n          <p><strong>체크인:</strong> {{ reservation.checkIn }}</p>\r\n          <p><strong>체크아웃:</strong> {{ reservation.checkOut }}</p>\r\n          <p><strong>인원:</strong> {{ reservation.numberOfPerson }}명</p>\r\n          <p><strong>결제 상태:</strong> {{ reservation.paymentCompleted ? \"완료\" : \"미완료\" }}</p>\r\n          <button @click=\"editReservation(reservation)\">수정</button>\r\n          <button @click=\"deleteReservation(reservation.bookingId)\" class=\"delete-btn\">삭제</button>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- 예약 수정 모달 -->\r\n      <div v-if=\"showEditModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h3>예약 수정</h3>\r\n          <form @submit.prevent=\"updateBooking\">\r\n            <div>\r\n              <label>체크인:</label>\r\n              <input v-model=\"editBooking.checkIn\" type=\"date\" />\r\n            </div>\r\n            <div>\r\n              <label>체크아웃:</label>\r\n              <input v-model=\"editBooking.checkOut\" type=\"date\" />\r\n            </div>\r\n            <button type=\"submit\">저장</button>\r\n            <button @click=\"showEditModal = false\">취소</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p v-else-if=\"reservations\">예약 내역이 없습니다.</p>\r\n    <p v-else>예약 정보를 불러오는 중...</p>\r\n    <router-link to=\"/mypage\">마이페이지로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"Booking\",\r\n  data() {\r\n    return {\r\n      reservations: null,\r\n      showEditModal: false,\r\n      editBooking: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchReservations();\r\n  },\r\n  methods: {\r\n    async fetchReservations() {\r\n      try {\r\n        const response = await api.get(\"/api/users/book\");\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.reservations = result.data;\r\n          console.log(\"예약 조회 성공:\", this.reservations);\r\n        } else {\r\n          console.error(\"예약 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"예약 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    editReservation(reservation) {\r\n      this.editBooking = { ...reservation }; // 전체 복사\r\n      this.showEditModal = true;\r\n    },\r\n    async updateBooking() {\r\n      try {\r\n        const response = await api.put(\"/api/users/book\", {\r\n          bookingId: this.editBooking.bookingId,\r\n          checkIn: this.editBooking.checkIn,\r\n          checkOut: this.editBooking.checkOut,\r\n          numberOfPerson: this.editBooking.numberOfPerson,\r\n          paymentCompleted: this.editBooking.paymentCompleted,\r\n          accommodation: this.editBooking.accommodation,\r\n          room: this.editBooking.room,\r\n        });\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.showEditModal = false;\r\n          this.fetchReservations(); // 갱신\r\n          alert(\"예약 수정 성공!\");\r\n        } else {\r\n          alert(\"예약 수정 실패: \" + (result.message || \"오류 발생\"));\r\n        }\r\n      } catch (error) {\r\n        alert(\"예약 수정 오류: \" + (error.response?.data.message || error.message));\r\n      }\r\n    },\r\n    async deleteReservation(bookingId) {\r\n      if (confirm(\"이 예약을 삭제하시겠습니까?\")) {\r\n        try {\r\n          const response = await api.delete(`/api/users/book/${bookingId}`);\r\n          const result = response.data;\r\n          if (result.status === 200 && !result.errorCode) {\r\n            this.fetchReservations(); // 갱신\r\n            alert(\"예약 삭제 성공!\");\r\n          } else {\r\n            alert(\"예약 삭제 실패: \" + (result.message || \"오류 발생\"));\r\n          }\r\n        } catch (error) {\r\n          alert(\"예약 삭제 오류: \" + (error.response?.data.message || error.message));\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.booking-container {\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\nul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\nbutton {\r\n  margin-left: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n.delete-btn {\r\n  background-color: #dc3545;\r\n}\r\n.delete-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n.modal div {\r\n  margin-bottom: 15px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}