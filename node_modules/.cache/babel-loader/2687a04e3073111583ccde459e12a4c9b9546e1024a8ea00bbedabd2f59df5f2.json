{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"PlaceDetail\",\n  data() {\n    return {\n      placesData: null,\n      checkInDate: this.$route.params.checkInDate,\n      checkOutDate: this.$route.params.checkOutDate\n    };\n  },\n  computed: {\n    accommodationId() {\n      return this.$route.params.accommodationId;\n    },\n    isLoggedIn() {\n      return !!localStorage.getItem(\"accessToken\");\n    }\n  },\n  created() {\n    this.fetchPlacesData();\n  },\n  methods: {\n    async fetchPlacesData() {\n      try {\n        const response = await api.get(`/api/places/${this.accommodationId}/${this.checkInDate}/${this.checkOutDate}`);\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.placesData = result.data;\n          console.log(\"Places 데이터 조회 성공:\", this.placesData);\n        } else {\n          console.error(\"Places 데이터 조회 실패:\", result);\n        }\n      } catch (error) {\n        console.error(\"Places 데이터 조회 오류:\", error.response?.data || error.message);\n      }\n    },\n    updatePlaces() {\n      if (this.checkInDate && this.checkOutDate) {\n        this.$router.push(`/places/${this.accommodationId}/${this.checkInDate}/${this.checkOutDate}`);\n        this.fetchPlacesData();\n      }\n    },\n    handleReservation(roomId, price) {\n      const userId = localStorage.getItem(\"userId\");\n      if (!userId) {\n        console.error(\"userId가 저장되지 않음, 로그인 상태 확인 필요\");\n      }\n      const paymentData = {\n        userId: userId || \"guest\",\n        // undefined 대신 null 체크\n        accommodationId: this.accommodationId,\n        roomId: roomId,\n        name: this.placesData.accommodation.name,\n        phoneNumber: \"010-1234-5678\",\n        // 임시값\n        checkInDate: this.checkInDate,\n        checkOutDate: this.checkOutDate,\n        paymentComplete: false,\n        amount: price,\n        paymentMethod: \"credit_card\"\n      };\n      if (!this.isLoggedIn) {\n        console.log(\"로그인 필요, 로그인 페이지로 이동\");\n        this.$router.push({\n          path: \"/login\",\n          query: {\n            redirect: this.$route.fullPath\n          }\n        });\n      } else {\n        console.log(\"로그인 완료, 결제 페이지로 이동:\", paymentData);\n        this.$router.push({\n          path: \"/payment\",\n          query: paymentData\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","placesData","checkInDate","$route","params","checkOutDate","computed","accommodationId","isLoggedIn","localStorage","getItem","created","fetchPlacesData","methods","response","get","result","status","errorCode","console","log","error","message","updatePlaces","$router","push","handleReservation","roomId","price","userId","paymentData","accommodation","phoneNumber","paymentComplete","amount","paymentMethod","path","query","redirect","fullPath"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\PlaceDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"places-container\">\r\n    <h2>숙소 상세 정보</h2>\r\n    <div>\r\n      <label>체크인: <input type=\"date\" v-model=\"checkInDate\" @change=\"updatePlaces\" /></label>\r\n      <label>체크아웃: <input type=\"date\" v-model=\"checkOutDate\" @change=\"updatePlaces\" /></label>\r\n    </div>\r\n    <div v-if=\"placesData\">\r\n      <div class=\"accommodation-info\">\r\n        <h3>{{ placesData.accommodation.name }}</h3>\r\n        <p><strong>위치:</strong> {{ placesData.accommodation.location }}</p>\r\n        <p><strong>태그:</strong> {{ placesData.accommodation.tag || \"없음\" }}</p>\r\n        <p><strong>설명:</strong> {{ placesData.accommodation.explanation || \"없음\" }}</p>\r\n        <p><strong>서비스:</strong> {{ placesData.accommodation.serviceInfo || \"없음\" }}</p>\r\n        <p v-if=\"placesData.accommodation.image && placesData.accommodation.image.length\">\r\n          <img :src=\"placesData.accommodation.image[0]\" alt=\"숙소 이미지\" style=\"max-width: 300px;\" />\r\n        </p>\r\n        <p v-if=\"placesData.accommodation.discount\"><strong>할인:</strong> {{ placesData.accommodation.discount }}%</p>\r\n        <p v-if=\"placesData.accommodation.season\"><strong>계절:</strong> {{ placesData.accommodation.season }}</p>\r\n        <p><strong>좋아요:</strong> {{ placesData.accommodation.likeCount }}</p>\r\n        <p><strong>좋아요:</strong> {{ placesData.accommodation.likeCount }}</p>\r\n<button @click=\"toggleLike\">❤️ 좋아요</button>\r\n      </div>\r\n      <div class=\"rooms-list\" v-if=\"placesData.rooms && placesData.rooms.length\">\r\n        <h3>예약 가능한 방</h3>\r\n        <ul>\r\n          <li v-for=\"room in placesData.rooms\" :key=\"room.roomId\">\r\n            <div class=\"room-info\">\r\n              <strong>{{ room.name }}</strong><br />\r\n              <span>최대 인원: {{ room.maxCapacity }}</span><br />\r\n              <span>최소 인원: {{ room.minCapacity }}</span><br />\r\n              <span>가격: {{ room.price }}원</span><br />\r\n              <span>설명: {{ room.explanation || \"없음\" }}</span><br />\r\n              <span>서비스: {{ room.serviceInfo || \"없음\" }}</span><br />\r\n              <span>태그: {{ room.tag || \"없음\" }}</span><br />\r\n              <span v-if=\"room.images && room.images.length\">\r\n               <img :src=\"room.images[0]\" alt=\"방 이미지\" style=\"max-width: 200px;\" />\r\n               <img :src=\"room.images[1]\" alt=\"방 이미지\" style=\"max-width: 200px;\" />\r\n              </span>\r\n            </div>\r\n            <button\r\n              class=\"reserve-btn\"\r\n              :disabled=\"room.availableRooms === 0\"\r\n              @click=\"handleReservation(room.roomId, room.price)\"\r\n            >\r\n              예약하기\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <p v-else>예약 가능한 방이 없습니다.</p>\r\n    </div>\r\n    <p v-else>데이터를 불러오는 중...</p>\r\n    <router-link :to=\"`/sub-home/${placesData?.accommodation?.category || '호텔'}`\">카테고리로 돌아가기</router-link> |\r\n    <router-link to=\"/\">홈으로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"PlaceDetail\",\r\n  data() {\r\n    return {\r\n      placesData: null,\r\n      checkInDate: this.$route.params.checkInDate,\r\n      checkOutDate: this.$route.params.checkOutDate,\r\n    };\r\n  },\r\n  computed: {\r\n    accommodationId() {\r\n      return this.$route.params.accommodationId;\r\n    },\r\n    isLoggedIn() {\r\n      return !!localStorage.getItem(\"accessToken\");\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchPlacesData();\r\n  },\r\n  methods: {\r\n    async fetchPlacesData() {\r\n      try {\r\n        const response = await api.get(\r\n          `/api/places/${this.accommodationId}/${this.checkInDate}/${this.checkOutDate}`\r\n        );\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.placesData = result.data;\r\n          console.log(\"Places 데이터 조회 성공:\", this.placesData);\r\n        } else {\r\n          console.error(\"Places 데이터 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Places 데이터 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    updatePlaces() {\r\n      if (this.checkInDate && this.checkOutDate) {\r\n        this.$router.push(`/places/${this.accommodationId}/${this.checkInDate}/${this.checkOutDate}`);\r\n        this.fetchPlacesData();\r\n      }\r\n    },\r\n    handleReservation(roomId, price) {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  if (!userId) {\r\n    console.error(\"userId가 저장되지 않음, 로그인 상태 확인 필요\");\r\n  }\r\n  \r\n  const paymentData = {\r\n    userId: userId || \"guest\", // undefined 대신 null 체크\r\n    accommodationId: this.accommodationId,\r\n    roomId: roomId,\r\n    name: this.placesData.accommodation.name,\r\n    phoneNumber: \"010-1234-5678\", // 임시값\r\n    checkInDate: this.checkInDate,\r\n    checkOutDate: this.checkOutDate,\r\n    paymentComplete: false,\r\n    amount: price,\r\n    paymentMethod: \"credit_card\",\r\n  };\r\n\r\n  if (!this.isLoggedIn) {\r\n    console.log(\"로그인 필요, 로그인 페이지로 이동\");\r\n    this.$router.push({\r\n      path: \"/login\",\r\n      query: { redirect: this.$route.fullPath },\r\n    });\r\n  } else {\r\n    console.log(\"로그인 완료, 결제 페이지로 이동:\", paymentData);\r\n    this.$router.push({\r\n      path: \"/payment\",\r\n      query: paymentData,\r\n    });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.places-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n.accommodation-info {\r\n  margin-bottom: 30px;\r\n}\r\n.rooms-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n.rooms-list li {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n.room-info {\r\n  flex-grow: 1;\r\n}\r\n.reserve-btn {\r\n  padding: 8px 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.reserve-btn:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}