{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"아이디:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"영문자/숫자 6~16자\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"비밀번호:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"8~16자\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"phoneNumber\"\n  }, \"전화번호:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phoneNumber\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.phoneNumber = $event),\n    placeholder: \"10~11자 (숫자만)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phoneNumber]])]), _createElementVNode(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"이메일:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.email = $event),\n    placeholder: \"example@domain.com\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"이름:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.name = $event),\n    placeholder: \"2~8자\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _cache[11] || (_cache[11] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"회원가입\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_cache[13] || (_cache[13] = _createTextVNode(\" 이미 계정이 있으신가요? \")), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"로그인\")])),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleRegister","for","type","id","$event","$data","username","placeholder","password","phoneNumber","email","name","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>회원가입</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div>\r\n        <label for=\"username\">아이디:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"영문자/숫자 6~16자\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"8~16자\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"phoneNumber\">전화번호:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phoneNumber\"\r\n          v-model=\"phoneNumber\"\r\n          placeholder=\"10~11자 (숫자만)\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"email\">이메일:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"email\"\r\n          placeholder=\"example@domain.com\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"name\">이름:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          v-model=\"name\"\r\n          placeholder=\"2~8자\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">회원가입</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    <p>\r\n      이미 계정이 있으신가요?\r\n      <router-link to=\"/\">로그인</router-link>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"RegisterForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      this.errorMessage = \"\";\r\n      try {\r\n        const response = await api.post(\"/api/users/register\", {\r\n          username: this.username,\r\n          password: this.password,\r\n          phoneNumber: this.phoneNumber,\r\n          email: this.email,\r\n          name: this.name,\r\n        });\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답:\", result); \r\n\r\n        \r\n        if (result.status === 200 && !result.errorCode) {\r\n          console.log(\"회원가입 성공:\", result);\r\n          this.$router.push(\"/\"); // 로그인 페이지로 이동\r\n        } else {\r\n          this.errorMessage = result.message || \"회원가입에 실패했습니다.\";\r\n          console.error(\"회원가입 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        const errorResponse = error.response?.data;\r\n        this.errorMessage = errorResponse?.message || \"회원가입 중 오류가 발생했습니다.\";\r\n        console.error(\"회원가입 실패:\", errorResponse || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EADjCC,GAAA;EAmD2BD,KAAK,EAAC;;;;uBAlD/BE,mBAAA,CAuDM,OAvDNC,UAuDM,G,4BAtDJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CA+CO;IA/CAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACnCJ,mBAAA,CAQM,c,0BAPJA,mBAAA,CAAkC;IAA3BO,GAAG,EAAC;EAAU,GAAC,MAAI,sB,gBAC1BP,mBAAA,CAKE;IAJAQ,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IARvB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IASmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,WAAW,EAAC;iDADHF,KAAA,CAAAC,QAAQ,E,KAIrBZ,mBAAA,CAQM,c,0BAPJA,mBAAA,CAAmC;IAA5BO,GAAG,EAAC;EAAU,GAAC,OAAK,sB,gBAC3BP,mBAAA,CAKE;IAJAQ,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IAjBvB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAkBmBC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IACjBG,WAAW,EAAC;iDADHF,KAAA,CAAAG,QAAQ,E,KAIrBd,mBAAA,CAQM,c,0BAPJA,mBAAA,CAAsC;IAA/BO,GAAG,EAAC;EAAa,GAAC,OAAK,sB,gBAC9BP,mBAAA,CAKE;IAJAQ,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,aAAa;IA1B1B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IA2BmBC,KAAA,CAAAI,WAAW,GAAAL,MAAA;IACpBG,WAAW,EAAC;iDADHF,KAAA,CAAAI,WAAW,E,KAIxBf,mBAAA,CAQM,c,0BAPJA,mBAAA,CAA+B;IAAxBO,GAAG,EAAC;EAAO,GAAC,MAAI,sB,gBACvBP,mBAAA,CAKE;IAJAQ,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,OAAO;IAnCpB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAoCmBC,KAAA,CAAAK,KAAK,GAAAN,MAAA;IACdG,WAAW,EAAC;iDADHF,KAAA,CAAAK,KAAK,E,KAIlBhB,mBAAA,CAQM,c,4BAPJA,mBAAA,CAA6B;IAAtBO,GAAG,EAAC;EAAM,GAAC,KAAG,sB,gBACrBP,mBAAA,CAKE;IAJAQ,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,MAAM;IA5CnB,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IA6CmBC,KAAA,CAAAM,IAAI,GAAAP,MAAA;IACbG,WAAW,EAAC;iDADHF,KAAA,CAAAM,IAAI,E,iCAIjBjB,mBAAA,CAAmC;IAA3BQ,IAAI,EAAC;EAAQ,GAAC,MAAI,qB,4BAEnBG,KAAA,CAAAO,YAAY,I,cAArBpB,mBAAA,CAAmE,KAAnEqB,UAAmE,EAAAC,gBAAA,CAAnBT,KAAA,CAAAO,YAAY,oBAnDhEG,mBAAA,gBAoDIrB,mBAAA,CAGI,Y,4BAvDRsB,gBAAA,CAoDO,iBAED,IAAAC,YAAA,CAAqCC,sBAAA;IAAxBC,EAAE,EAAC;EAAG;IAtDzBC,OAAA,EAAAC,QAAA,CAsD0B,MAAGzB,MAAA,SAAAA,MAAA,QAtD7BoB,gBAAA,CAsD0B,KAAG,E;IAtD7BM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}