{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"PaymentPage\",\n  data() {\n    return {\n      paymentData: {\n        userId: this.$route.query.userId || \"guest\",\n        accommodationId: this.$route.query.accommodationId,\n        roomId: this.$route.query.roomId,\n        name: this.$route.query.name,\n        phoneNumber: this.$route.query.phoneNumber || \"\",\n        checkInDate: this.$route.query.checkInDate,\n        checkOutDate: this.$route.query.checkOutDate,\n        paymentComplete: false,\n        amount: Number(this.$route.query.amount),\n        paymentMethod: this.$route.query.paymentMethod || \"credit_card\"\n      }\n    };\n  },\n  methods: {\n    async submitPayment() {\n      try {\n        const response = await api.post(\"/api/payment/create\", this.paymentData);\n        const result = response.data;\n        console.log(\"결제 응답:\", result);\n        if (result.status === 200 && !result.errorCode) {\n          alert(\"결제가 완료되었습니다!\");\n          this.$router.push(\"/\");\n        } else {\n          alert(\"결제 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"결제 오류:\", error.response?.data || error.message);\n        alert(\"결제 중 오류가 발생했습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","paymentData","userId","$route","query","accommodationId","roomId","phoneNumber","checkInDate","checkOutDate","paymentComplete","amount","Number","paymentMethod","methods","submitPayment","response","post","result","console","log","status","errorCode","alert","$router","push","message","error"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\PaymentPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"payment-container\">\r\n    <h2>결제 정보 입력</h2>\r\n    <form @submit.prevent=\"submitPayment\">\r\n     <div>\r\n      <label>이름: <input v-model=\"paymentData.name\" required /></label>\r\n    </div>\r\n<div>\r\n  <label>전화번호: <input v-model=\"paymentData.phoneNumber\" required /></label>\r\n</div>\r\n      <div>\r\n        <label>체크인: <input type=\"date\" v-model=\"paymentData.checkInDate\" readonly /></label>\r\n      </div>\r\n      <div>\r\n        <label>체크아웃: <input type=\"date\" v-model=\"paymentData.checkOutDate\" readonly /></label>\r\n      </div>\r\n      <div>\r\n        <label>결제 금액: <input v-model=\"paymentData.amount\" readonly /></label>\r\n      </div>\r\n      <div>\r\n        <label>결제 방법:\r\n          <select v-model=\"paymentData.paymentMethod\" required>\r\n            <option value=\"credit_card\">신용카드</option>\r\n            <option value=\"bank_transfer\">계좌이체</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">결제하기</button>\r\n    </form>\r\n    <router-link :to=\"`/places/${paymentData.accommodationId}/${paymentData.checkInDate}/${paymentData.checkOutDate}`\">\r\n      뒤로 가기\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"PaymentPage\",\r\n  data() {\r\n    return {\r\n      paymentData: {\r\n        userId: this.$route.query.userId || \"guest\",\r\n        accommodationId: this.$route.query.accommodationId,\r\n        roomId: this.$route.query.roomId,\r\n        name: this.$route.query.name,\r\n        phoneNumber: this.$route.query.phoneNumber || \"\",\r\n        checkInDate: this.$route.query.checkInDate,\r\n        checkOutDate: this.$route.query.checkOutDate,\r\n        paymentComplete: false,\r\n        amount: Number(this.$route.query.amount),\r\n        paymentMethod: this.$route.query.paymentMethod || \"credit_card\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitPayment() {\r\n      try {\r\n        const response = await api.post(\"/api/payment/create\", this.paymentData);\r\n        const result = response.data;\r\n        console.log(\"결제 응답:\", result);\r\n        if (result.status === 200 && !result.errorCode) {\r\n          alert(\"결제가 완료되었습니다!\");\r\n          this.$router.push(\"/\");\r\n        } else {\r\n          alert(\"결제 실패: \" + result.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"결제 오류:\", error.response?.data || error.message);\r\n        alert(\"결제 중 오류가 발생했습니다.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.payment-container {\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput, select {\r\n  padding: 5px;\r\n  width: 100%;\r\n}\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n</style>"],"mappings":";AAoCA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,MAAK,IAAK,OAAO;QAC3CG,eAAe,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,eAAe;QAClDC,MAAM,EAAE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACE,MAAM;QAChCP,IAAI,EAAE,IAAI,CAACI,MAAM,CAACC,KAAK,CAACL,IAAI;QAC5BQ,WAAW,EAAE,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACG,WAAU,IAAK,EAAE;QAChDC,WAAW,EAAE,IAAI,CAACL,MAAM,CAACC,KAAK,CAACI,WAAW;QAC1CC,YAAY,EAAE,IAAI,CAACN,MAAM,CAACC,KAAK,CAACK,YAAY;QAC5CC,eAAe,EAAE,KAAK;QACtBC,MAAM,EAAEC,MAAM,CAAC,IAAI,CAACT,MAAM,CAACC,KAAK,CAACO,MAAM,CAAC;QACxCE,aAAa,EAAE,IAAI,CAACV,MAAM,CAACC,KAAK,CAACS,aAAY,IAAK;MACpD;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,GAAG,CAACmB,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAChB,WAAW,CAAC;QACxE,MAAMiB,MAAK,GAAIF,QAAQ,CAAChB,IAAI;QAC5BmB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;QAC7B,IAAIA,MAAM,CAACG,MAAK,KAAM,GAAE,IAAK,CAACH,MAAM,CAACI,SAAS,EAAE;UAC9CC,KAAK,CAAC,cAAc,CAAC;UACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACLF,KAAK,CAAC,SAAQ,GAAIL,MAAM,CAACQ,OAAO,CAAC;QACnC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACX,QAAQ,EAAEhB,IAAG,IAAK2B,KAAK,CAACD,OAAO,CAAC;QAC9DH,KAAK,CAAC,kBAAkB,CAAC;MAC3B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}