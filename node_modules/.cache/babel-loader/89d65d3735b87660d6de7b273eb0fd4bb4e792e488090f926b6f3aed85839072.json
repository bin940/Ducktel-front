{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"UserProfile\",\n  data() {\n    return {\n      userInfo: null,\n      editUser: {\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\"\n      },\n      newPassword: \"\"\n    };\n  },\n  created() {\n    this.fetchProfile();\n  },\n  computed: {\n    isLocalLogin() {\n      return localStorage.getItem(\"loginType\") === \"LOCAL\";\n    }\n  },\n  methods: {\n    async fetchProfile() {\n      try {\n        const response = await api.get(\"/api/users/profile\");\n        const result = response.data;\n        console.log(\"백엔드 응답 전체:\", result);\n        if (result.status === 200 && !result.errorCode) {\n          this.userInfo = result.data;\n          this.editUser = {\n            ...result.data\n          };\n          console.log(\"프로필 조회 성공:\", this.userInfo);\n        } else {\n          console.error(\"프로필 조회 실패:\", result);\n        }\n      } catch (error) {\n        console.error(\"프로필 조회 오류:\", error.response?.data || error.message);\n      }\n    },\n    async updateProfile() {\n      try {\n        const response = await api.put(\"/api/users/profile\", this.editUser);\n        const result = response.data;\n        if (result.status === 200 && !result.errorCode) {\n          this.userInfo = result.data;\n          alert(\"정보 수정 성공!\");\n        } else {\n          alert(\"정보 수정 실패: \" + (result.message || \"오류 발생\"));\n        }\n      } catch (error) {\n        alert(\"정보 수정 오류: \" + (error.response?.data.message || error.message));\n      }\n    },\n    async resetPassword() {\n      try {\n        const response = await api.post(\"/api/users/password-reset\", {\n          password: this.newPassword\n        });\n        const result = response.data;\n        console.log(\"비밀번호 재설정 응답:\", result);\n        if (result === \"비밀번호가 변경 되었습니다.\") {\n          alert(\"비밀번호 재설정 성공!\");\n          this.newPassword = \"\";\n        } else {\n          alert(\"비밀번호 재설정 실패\");\n        }\n      } catch (error) {\n        alert(\"비밀번호 재설정 오류: \" + (error.response?.data || error.message));\n      }\n    },\n    async deleteProfile() {\n      if (confirm(\"정말 탈퇴하시겠습니까?\")) {\n        try {\n          const response = await api.delete(\"/api/users/profile/\" + this.userInfo.userId);\n          const result = response.data;\n          if (result === \"삭제되었습니다\") {\n            localStorage.removeItem(\"accessToken\");\n            localStorage.removeItem(\"refreshToken\");\n            alert(\"회원 탈퇴 성공!\");\n            this.$router.push(\"/\");\n            window.location.reload();\n          } else {\n            alert(\"회원 탈퇴 실패\");\n          }\n        } catch (error) {\n          alert(\"회원 탈퇴 오류: \" + (error.response?.data || error.message));\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","userInfo","editUser","email","phoneNumber","newPassword","created","fetchProfile","computed","isLocalLogin","localStorage","getItem","methods","response","get","result","console","log","status","errorCode","error","message","updateProfile","put","alert","resetPassword","post","password","deleteProfile","confirm","delete","userId","removeItem","$router","push","window","location","reload"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\Ducktel\\duckfront\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h2>내 정보</h2>\r\n    <div v-if=\"userInfo !== null\">\r\n      \r\n      <form @submit.prevent=\"updateProfile\">\r\n        <div>\r\n          <p>아이디: {{ userInfo.username }}</p>\r\n        </div>\r\n        <div>\r\n          <label>이메일:</label>\r\n          <input v-model=\"editUser.email\" placeholder=\"이메일\" />\r\n        </div>\r\n        <div>\r\n          <label>전화번호:</label>\r\n          <input v-model=\"editUser.phoneNumber\" placeholder=\"전화번호\" />\r\n        </div>\r\n        <button type=\"submit\">수정</button>\r\n      </form>\r\n\r\n      <h3 v-if=\"isLocalLogin\">비밀번호 재설정</h3>\r\n      <form v-if=\"isLocalLogin\" @submit.prevent=\"resetPassword\">\r\n        <div>\r\n          <label>새 비밀번호:</label>\r\n          <input type=\"password\" v-model=\"newPassword\" placeholder=\"새 비밀번호\" />\r\n        </div>\r\n        <button type=\"submit\">재설정</button>\r\n      </form>\r\n\r\n      <button @click=\"deleteProfile\" class=\"delete-btn\">회원 탈퇴</button>\r\n    </div>\r\n    <p v-else>정보를 불러오는 중...</p>\r\n    <router-link to=\"/mypage\">마이페이지로 돌아가기</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"UserProfile\",\r\n  data() {\r\n    return {\r\n      userInfo: null,\r\n      editUser: { name: \"\", email: \"\", phoneNumber: \"\" },\r\n      newPassword: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProfile();\r\n  },\r\n  computed: {\r\n    isLocalLogin() {\r\n      return localStorage.getItem(\"loginType\") === \"LOCAL\";\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchProfile() {\r\n      try {\r\n        const response = await api.get(\"/api/users/profile\");\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답 전체:\", result);\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.userInfo = result.data;\r\n          this.editUser = { ...result.data };\r\n          console.log(\"프로필 조회 성공:\", this.userInfo);\r\n        } else {\r\n          console.error(\"프로필 조회 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"프로필 조회 오류:\", error.response?.data || error.message);\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      try {\r\n        const response = await api.put(\"/api/users/profile\", this.editUser);\r\n        const result = response.data;\r\n        if (result.status === 200 && !result.errorCode) {\r\n          this.userInfo = result.data;\r\n          alert(\"정보 수정 성공!\");\r\n        } else {\r\n          alert(\"정보 수정 실패: \" + (result.message || \"오류 발생\"));\r\n        }\r\n      } catch (error) {\r\n        alert(\"정보 수정 오류: \" + (error.response?.data.message || error.message));\r\n      }\r\n    },\r\n    async resetPassword() {\r\n      try {\r\n        const response = await api.post(\"/api/users/password-reset\", { password: this.newPassword });\r\n        const result = response.data;\r\n        console.log(\"비밀번호 재설정 응답:\", result);\r\n        if (result === \"비밀번호가 변경 되었습니다.\") {\r\n          alert(\"비밀번호 재설정 성공!\");\r\n          this.newPassword = \"\";\r\n        } else {\r\n          alert(\"비밀번호 재설정 실패\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"비밀번호 재설정 오류: \" + (error.response?.data || error.message));\r\n      }\r\n    },\r\n    async deleteProfile() {\r\n      if (confirm(\"정말 탈퇴하시겠습니까?\")) {\r\n        try {\r\n          const response = await api.delete(\"/api/users/profile/\" + this.userInfo.userId);\r\n          const result = response.data;\r\n          if (result === \"삭제되었습니다\") {\r\n            localStorage.removeItem(\"accessToken\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n            alert(\"회원 탈퇴 성공!\");\r\n            this.$router.push(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(\"회원 탈퇴 실패\");\r\n          }\r\n        } catch (error) {\r\n          alert(\"회원 탈퇴 오류: \" + (error.response?.data || error.message));\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n.delete-btn {\r\n  background-color: #dc3545;\r\n  margin-top: 20px;\r\n}\r\n.delete-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}