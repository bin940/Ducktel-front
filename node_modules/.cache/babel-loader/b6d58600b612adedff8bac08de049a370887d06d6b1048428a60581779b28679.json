{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"../api\";\nexport default {\n  name: \"RegisterForm\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      name: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleRegister() {\n      this.errorMessage = \"\";\n      try {\n        const response = await api.post(\"/api/auth/register\", {\n          username: this.username,\n          password: this.password,\n          phoneNumber: this.phoneNumber,\n          email: this.email,\n          name: this.name\n        });\n        const result = response.data;\n        console.log(\"백엔드 응답:\", result); // 디버깅용\n\n        if (result.status === 200 && !result.errorCode) {\n          console.log(\"회원가입 성공:\", result);\n          this.$router.push(\"/\"); // 로그인 페이지로 이동\n        } else {\n          this.errorMessage = result.message || \"회원가입에 실패했습니다.\";\n          console.error(\"회원가입 실패:\", result);\n        }\n      } catch (error) {\n        const errorResponse = error.response?.data;\n        this.errorMessage = errorResponse?.message || \"회원가입 중 오류가 발생했습니다.\";\n        console.error(\"회원가입 실패:\", errorResponse || error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","username","password","phoneNumber","email","errorMessage","methods","handleRegister","response","post","result","console","log","status","errorCode","$router","push","message","error","errorResponse"],"sources":["C:\\Users\\mycoms\\Desktop\\study\\duckfront\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>회원가입</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div>\r\n        <label for=\"username\">아이디:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"영문자/숫자 6~16자\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">비밀번호:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"8~16자\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"phoneNumber\">전화번호:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phoneNumber\"\r\n          v-model=\"phoneNumber\"\r\n          placeholder=\"10~11자 (숫자만)\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"email\">이메일:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"email\"\r\n          placeholder=\"example@domain.com\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"name\">이름:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          v-model=\"name\"\r\n          placeholder=\"2~8자\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">회원가입</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    <p>\r\n      이미 계정이 있으신가요?\r\n      <router-link to=\"/\">로그인</router-link>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"../api\";\r\n\r\nexport default {\r\n  name: \"RegisterForm\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      name: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      this.errorMessage = \"\";\r\n      try {\r\n        const response = await api.post(\"/api/auth/register\", {\r\n          username: this.username,\r\n          password: this.password,\r\n          phoneNumber: this.phoneNumber,\r\n          email: this.email,\r\n          name: this.name,\r\n        });\r\n        const result = response.data;\r\n        console.log(\"백엔드 응답:\", result); // 디버깅용\r\n\r\n        \r\n        if (result.status === 200 && !result.errorCode) {\r\n          console.log(\"회원가입 성공:\", result);\r\n          this.$router.push(\"/\"); // 로그인 페이지로 이동\r\n        } else {\r\n          this.errorMessage = result.message || \"회원가입에 실패했습니다.\";\r\n          console.error(\"회원가입 실패:\", result);\r\n        }\r\n      } catch (error) {\r\n        const errorResponse = error.response?.data;\r\n        this.errorMessage = errorResponse?.message || \"회원가입 중 오류가 발생했습니다.\";\r\n        console.error(\"회원가입 실패:\", errorResponse || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":";AA4DA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,EAAE;MACTL,IAAI,EAAE,EAAE;MACRM,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACF,YAAW,GAAI,EAAE;MACtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMV,GAAG,CAACW,IAAI,CAAC,oBAAoB,EAAE;UACpDR,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBL,IAAI,EAAE,IAAI,CAACA;QACb,CAAC,CAAC;QACF,MAAMW,MAAK,GAAIF,QAAQ,CAACR,IAAI;QAC5BW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC,EAAE;;QAGhC,IAAIA,MAAM,CAACG,MAAK,KAAM,GAAE,IAAK,CAACH,MAAM,CAACI,SAAS,EAAE;UAC9CH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;UAC/B,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1B,OAAO;UACL,IAAI,CAACX,YAAW,GAAIK,MAAM,CAACO,OAAM,IAAK,eAAe;UACrDN,OAAO,CAACO,KAAK,CAAC,UAAU,EAAER,MAAM,CAAC;QACnC;MACF,EAAE,OAAOQ,KAAK,EAAE;QACd,MAAMC,aAAY,GAAID,KAAK,CAACV,QAAQ,EAAER,IAAI;QAC1C,IAAI,CAACK,YAAW,GAAIc,aAAa,EAAEF,OAAM,IAAK,oBAAoB;QAClEN,OAAO,CAACO,KAAK,CAAC,UAAU,EAAEC,aAAY,IAAKD,KAAK,CAACD,OAAO,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}